// <auto-generated />
using System;
using CSMarketApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSMarketApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240426185202_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealOffers", b =>
                {
                    b.Property<int>("IdDealOffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDealOffer"));

                    b.Property<int>("IdDeal")
                        .HasColumnType("int");

                    b.Property<int>("IdOfferer")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDealOffer");

                    b.HasIndex("IdDeal");

                    b.HasIndex("IdOfferer");

                    b.ToTable("DealOffers");

                    b.HasData(
                        new
                        {
                            IdDealOffer = 1,
                            IdDeal = 1,
                            IdOfferer = 4,
                            OfferPrice = 0.34m
                        },
                        new
                        {
                            IdDealOffer = 2,
                            IdDeal = 2,
                            IdOfferer = 3,
                            OfferPrice = 1.80m
                        },
                        new
                        {
                            IdDealOffer = 3,
                            IdDeal = 3,
                            IdOfferer = 2,
                            OfferPrice = 0.18m
                        },
                        new
                        {
                            IdDealOffer = 4,
                            IdDeal = 4,
                            IdOfferer = 1,
                            OfferPrice = 4.23m
                        },
                        new
                        {
                            IdDealOffer = 5,
                            IdDeal = 1,
                            IdOfferer = 3,
                            OfferPrice = 0.35m
                        },
                        new
                        {
                            IdDealOffer = 6,
                            IdDeal = 2,
                            IdOfferer = 1,
                            OfferPrice = 1.81m
                        },
                        new
                        {
                            IdDealOffer = 7,
                            IdDeal = 3,
                            IdOfferer = 4,
                            OfferPrice = 0.19m
                        },
                        new
                        {
                            IdDealOffer = 8,
                            IdDeal = 4,
                            IdOfferer = 2,
                            OfferPrice = 4.24m
                        },
                        new
                        {
                            IdDealOffer = 9,
                            IdDeal = 9,
                            IdOfferer = 1,
                            OfferPrice = 2.23m
                        },
                        new
                        {
                            IdDealOffer = 10,
                            IdDeal = 10,
                            IdOfferer = 2,
                            OfferPrice = 44.15m
                        },
                        new
                        {
                            IdDealOffer = 11,
                            IdDeal = 12,
                            IdOfferer = 4,
                            OfferPrice = 18.11m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.Property<int>("IdDeal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeal"));

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDeal");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdUser");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            IdDeal = 1,
                            IdItem = 1,
                            IdUser = 1,
                            Price = 0.36m
                        },
                        new
                        {
                            IdDeal = 2,
                            IdItem = 2,
                            IdUser = 2,
                            Price = 2.02m
                        },
                        new
                        {
                            IdDeal = 3,
                            IdItem = 3,
                            IdUser = 3,
                            Price = 0.22m
                        },
                        new
                        {
                            IdDeal = 4,
                            IdItem = 4,
                            IdUser = 4,
                            Price = 4.67m
                        },
                        new
                        {
                            IdDeal = 5,
                            IdItem = 1,
                            IdUser = 2,
                            Price = 0.42m
                        },
                        new
                        {
                            IdDeal = 6,
                            IdItem = 2,
                            IdUser = 3,
                            Price = 1.97m
                        },
                        new
                        {
                            IdDeal = 7,
                            IdItem = 3,
                            IdUser = 4,
                            Price = 0.23m
                        },
                        new
                        {
                            IdDeal = 8,
                            IdItem = 4,
                            IdUser = 1,
                            Price = 4.80m
                        },
                        new
                        {
                            IdDeal = 9,
                            IdItem = 5,
                            IdUser = 2,
                            Price = 2.23m
                        },
                        new
                        {
                            IdDeal = 10,
                            IdItem = 6,
                            IdUser = 3,
                            Price = 45.78m
                        },
                        new
                        {
                            IdDeal = 11,
                            IdItem = 6,
                            IdUser = 4,
                            Price = 42.56m
                        },
                        new
                        {
                            IdDeal = 12,
                            IdItem = 7,
                            IdUser = 3,
                            Price = 19.01m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealsHistory", b =>
                {
                    b.Property<int>("IdDealsHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDealsHistory"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBuyer")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdSeller")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDealsHistory");

                    b.HasIndex("IdBuyer");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdSeller");

                    b.ToTable("DealsHistory");

                    b.HasData(
                        new
                        {
                            IdDealsHistory = 1,
                            Date = new DateTime(2024, 4, 25, 21, 52, 2, 523, DateTimeKind.Local).AddTicks(4232),
                            IdBuyer = 1,
                            IdItem = 1,
                            IdSeller = 3,
                            Price = 0.37m
                        },
                        new
                        {
                            IdDealsHistory = 2,
                            Date = new DateTime(2024, 4, 25, 5, 52, 2, 523, DateTimeKind.Local).AddTicks(4259),
                            IdBuyer = 2,
                            IdItem = 1,
                            IdSeller = 1,
                            Price = 0.34m
                        },
                        new
                        {
                            IdDealsHistory = 3,
                            Date = new DateTime(2024, 4, 26, 1, 52, 2, 523, DateTimeKind.Local).AddTicks(4260),
                            IdBuyer = 4,
                            IdItem = 2,
                            IdSeller = 2,
                            Price = 2.01m
                        },
                        new
                        {
                            IdDealsHistory = 4,
                            Date = new DateTime(2024, 4, 25, 0, 52, 2, 523, DateTimeKind.Local).AddTicks(4262),
                            IdBuyer = 3,
                            IdItem = 2,
                            IdSeller = 4,
                            Price = 2.13m
                        },
                        new
                        {
                            IdDealsHistory = 5,
                            Date = new DateTime(2024, 4, 24, 9, 52, 2, 523, DateTimeKind.Local).AddTicks(4264),
                            IdBuyer = 1,
                            IdItem = 3,
                            IdSeller = 2,
                            Price = 0.23m
                        },
                        new
                        {
                            IdDealsHistory = 6,
                            Date = new DateTime(2024, 4, 26, 15, 52, 2, 523, DateTimeKind.Local).AddTicks(4266),
                            IdBuyer = 2,
                            IdItem = 3,
                            IdSeller = 4,
                            Price = 0.20m
                        },
                        new
                        {
                            IdDealsHistory = 7,
                            Date = new DateTime(2024, 4, 25, 21, 52, 2, 523, DateTimeKind.Local).AddTicks(4267),
                            IdBuyer = 3,
                            IdItem = 4,
                            IdSeller = 1,
                            Price = 4.98m
                        },
                        new
                        {
                            IdDealsHistory = 8,
                            Date = new DateTime(2024, 4, 23, 13, 52, 2, 523, DateTimeKind.Local).AddTicks(4269),
                            IdBuyer = 4,
                            IdItem = 4,
                            IdSeller = 3,
                            Price = 5.02m
                        },
                        new
                        {
                            IdDealsHistory = 9,
                            Date = new DateTime(2024, 4, 25, 22, 52, 2, 523, DateTimeKind.Local).AddTicks(4271),
                            IdBuyer = 1,
                            IdItem = 5,
                            IdSeller = 3,
                            Price = 2.12m
                        },
                        new
                        {
                            IdDealsHistory = 10,
                            Date = new DateTime(2024, 4, 25, 2, 52, 2, 523, DateTimeKind.Local).AddTicks(4272),
                            IdBuyer = 2,
                            IdItem = 5,
                            IdSeller = 1,
                            Price = 2.42m
                        },
                        new
                        {
                            IdDealsHistory = 11,
                            Date = new DateTime(2024, 4, 25, 0, 52, 2, 523, DateTimeKind.Local).AddTicks(4274),
                            IdBuyer = 3,
                            IdItem = 6,
                            IdSeller = 4,
                            Price = 48.12m
                        },
                        new
                        {
                            IdDealsHistory = 12,
                            Date = new DateTime(2024, 4, 24, 13, 52, 2, 523, DateTimeKind.Local).AddTicks(4276),
                            IdBuyer = 4,
                            IdItem = 6,
                            IdSeller = 2,
                            Price = 46.99m
                        },
                        new
                        {
                            IdDealsHistory = 13,
                            Date = new DateTime(2024, 4, 26, 9, 52, 2, 523, DateTimeKind.Local).AddTicks(4277),
                            IdBuyer = 3,
                            IdItem = 7,
                            IdSeller = 1,
                            Price = 16.16m
                        },
                        new
                        {
                            IdDealsHistory = 14,
                            Date = new DateTime(2024, 4, 24, 5, 52, 2, 523, DateTimeKind.Local).AddTicks(4279),
                            IdBuyer = 2,
                            IdItem = 7,
                            IdSeller = 3,
                            Price = 18.40m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", b =>
                {
                    b.Property<int>("IdClassCharacteristic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClassCharacteristic"));

                    b.Property<string>("ClassCharacteristicName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdClassCharacteristic");

                    b.HasIndex("ClassCharacteristicName")
                        .IsUnique()
                        .HasFilter("[ClassCharacteristicName] IS NOT NULL");

                    b.ToTable("ClassCharacteristics");

                    b.HasData(
                        new
                        {
                            IdClassCharacteristic = 1,
                            ClassCharacteristicName = "Fire Range"
                        },
                        new
                        {
                            IdClassCharacteristic = 2,
                            ClassCharacteristicName = "Optical Scope"
                        },
                        new
                        {
                            IdClassCharacteristic = 3,
                            ClassCharacteristicName = "Magazine Capacity"
                        },
                        new
                        {
                            IdClassCharacteristic = 4,
                            ClassCharacteristicName = "Fire Rate"
                        },
                        new
                        {
                            IdClassCharacteristic = 5,
                            ClassCharacteristicName = "Blade Length"
                        },
                        new
                        {
                            IdClassCharacteristic = 6,
                            ClassCharacteristicName = "Material"
                        },
                        new
                        {
                            IdClassCharacteristic = 7,
                            ClassCharacteristicName = "Patch Place"
                        },
                        new
                        {
                            IdClassCharacteristic = 8,
                            ClassCharacteristicName = "Agent Game Side"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.Property<int>("IdItemClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemClass"));

                    b.Property<int>("IdItemSubClass")
                        .HasColumnType("int");

                    b.Property<string>("ItemClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdItemClass");

                    b.HasIndex("IdItemSubClass")
                        .IsUnique();

                    b.ToTable("ItemsClass");

                    b.HasData(
                        new
                        {
                            IdItemClass = 1,
                            IdItemSubClass = 63,
                            ItemClassName = "Case"
                        },
                        new
                        {
                            IdItemClass = 2,
                            IdItemSubClass = 9,
                            ItemClassName = "Pistol"
                        },
                        new
                        {
                            IdItemClass = 3,
                            IdItemSubClass = 27,
                            ItemClassName = "Rifle"
                        },
                        new
                        {
                            IdItemClass = 4,
                            IdItemSubClass = 62,
                            ItemClassName = "Music Kit"
                        },
                        new
                        {
                            IdItemClass = 5,
                            IdItemSubClass = 10,
                            ItemClassName = "Pistol"
                        },
                        new
                        {
                            IdItemClass = 6,
                            IdItemSubClass = 64,
                            ItemClassName = "Sticker"
                        },
                        new
                        {
                            IdItemClass = 7,
                            IdItemSubClass = 30,
                            ItemClassName = "Rifle"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClassCharacteristics", b =>
                {
                    b.Property<int>("IdItemClass")
                        .HasColumnType("int");

                    b.Property<int>("IdClassCharacteristic")
                        .HasColumnType("int");

                    b.Property<string>("ClassCharacteristicValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("IdItemClass", "IdClassCharacteristic");

                    b.HasIndex("IdClassCharacteristic");

                    b.ToTable("ItemsClassCharacteristics");

                    b.HasData(
                        new
                        {
                            IdItemClass = 2,
                            IdClassCharacteristic = 1,
                            ClassCharacteristicValue = "1800m"
                        },
                        new
                        {
                            IdItemClass = 2,
                            IdClassCharacteristic = 2,
                            ClassCharacteristicValue = "No"
                        },
                        new
                        {
                            IdItemClass = 2,
                            IdClassCharacteristic = 3,
                            ClassCharacteristicValue = "7 bullets"
                        },
                        new
                        {
                            IdItemClass = 3,
                            IdClassCharacteristic = 4,
                            ClassCharacteristicValue = "3bps"
                        },
                        new
                        {
                            IdItemClass = 3,
                            IdClassCharacteristic = 3,
                            ClassCharacteristicValue = "30 bullets"
                        },
                        new
                        {
                            IdItemClass = 5,
                            IdClassCharacteristic = 3,
                            ClassCharacteristicValue = "8 bullets"
                        },
                        new
                        {
                            IdItemClass = 5,
                            IdClassCharacteristic = 1,
                            ClassCharacteristicValue = "1500m"
                        },
                        new
                        {
                            IdItemClass = 6,
                            IdClassCharacteristic = 6,
                            ClassCharacteristicValue = "Foil"
                        },
                        new
                        {
                            IdItemClass = 7,
                            IdClassCharacteristic = 2,
                            ClassCharacteristicValue = "Yes"
                        },
                        new
                        {
                            IdItemClass = 7,
                            IdClassCharacteristic = 4,
                            ClassCharacteristicValue = "150bpm"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int?>("IdItemPicture")
                        .HasColumnType("int");

                    b.Property<int>("IdItemType")
                        .HasColumnType("int");

                    b.Property<int>("IdSkin")
                        .HasColumnType("int");

                    b.Property<int?>("Rarity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("IdItem");

                    b.HasIndex("IdItemPicture")
                        .IsUnique()
                        .HasFilter("[IdItemPicture] IS NOT NULL");

                    b.HasIndex("IdItemType");

                    b.HasIndex("IdSkin");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            IdItem = 1,
                            IdItemPicture = 1,
                            IdItemType = 1,
                            IdSkin = 1,
                            Rarity = 2
                        },
                        new
                        {
                            IdItem = 2,
                            IdItemPicture = 2,
                            IdItemType = 2,
                            IdSkin = 2,
                            Rarity = 3
                        },
                        new
                        {
                            IdItem = 3,
                            IdItemPicture = 3,
                            IdItemType = 3,
                            IdSkin = 3,
                            Rarity = 1
                        },
                        new
                        {
                            IdItem = 4,
                            IdItemPicture = 4,
                            IdItemType = 4,
                            IdSkin = 4,
                            Rarity = 2
                        },
                        new
                        {
                            IdItem = 5,
                            IdItemPicture = 5,
                            IdItemType = 5,
                            IdSkin = 5,
                            Rarity = 2
                        },
                        new
                        {
                            IdItem = 6,
                            IdItemPicture = 6,
                            IdItemType = 2,
                            IdSkin = 6,
                            Rarity = 5
                        },
                        new
                        {
                            IdItem = 7,
                            IdItemPicture = 7,
                            IdItemType = 6,
                            IdSkin = 7,
                            Rarity = 4
                        },
                        new
                        {
                            IdItem = 8,
                            IdItemPicture = 8,
                            IdItemType = 7,
                            IdSkin = 8,
                            Rarity = 6
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", b =>
                {
                    b.Property<int>("IdItemPicture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemPicture"));

                    b.Property<string>("ItemPicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdItemPicture");

                    b.HasIndex("ItemPicturePath")
                        .IsUnique();

                    b.ToTable("ItemsPictures");

                    b.HasData(
                        new
                        {
                            IdItemPicture = 1,
                            ItemPicturePath = "images\\ItemsPictures\\SnakeBite.png"
                        },
                        new
                        {
                            IdItemPicture = 2,
                            ItemPicturePath = "images\\ItemsPictures\\DesertEagle.png"
                        },
                        new
                        {
                            IdItemPicture = 3,
                            ItemPicturePath = "images\\ItemsPictures\\BorealForest.png"
                        },
                        new
                        {
                            IdItemPicture = 4,
                            ItemPicturePath = "images\\ItemsPictures\\ISOXO_inhuman.png"
                        },
                        new
                        {
                            IdItemPicture = 5,
                            ItemPicturePath = "images\\ItemsPictures\\R8Revolver_BoneForged.png"
                        },
                        new
                        {
                            IdItemPicture = 6,
                            ItemPicturePath = "images\\ItemsPictures\\DesertEagle_FennecFox.png"
                        },
                        new
                        {
                            IdItemPicture = 7,
                            ItemPicturePath = "images\\ItemsPictures\\Sticker_Tyloo.png"
                        },
                        new
                        {
                            IdItemPicture = 8,
                            ItemPicturePath = "images\\ItemsPictures\\AUG_Akihabara.png"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", b =>
                {
                    b.Property<int>("IdSkin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSkin"));

                    b.Property<string>("SkinName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSkin");

                    b.HasIndex("SkinName")
                        .IsUnique();

                    b.ToTable("Skins");

                    b.HasData(
                        new
                        {
                            IdSkin = 1,
                            SkinName = "Snake Bite"
                        },
                        new
                        {
                            IdSkin = 2,
                            SkinName = "Trigger Discipline"
                        },
                        new
                        {
                            IdSkin = 3,
                            SkinName = "Forest Boreal"
                        },
                        new
                        {
                            IdSkin = 4,
                            SkinName = "ISOxo - inhuman"
                        },
                        new
                        {
                            IdSkin = 5,
                            SkinName = "Bone Forged"
                        },
                        new
                        {
                            IdSkin = 6,
                            SkinName = "Fennec Fox"
                        },
                        new
                        {
                            IdSkin = 7,
                            SkinName = "Tyloo"
                        },
                        new
                        {
                            IdSkin = 8,
                            SkinName = "Akihabara"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", b =>
                {
                    b.Property<int>("IdItemSubClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemSubClass"));

                    b.Property<string>("ItemSubClassName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdItemSubClass");

                    b.HasIndex("ItemSubClassName")
                        .IsUnique()
                        .HasFilter("[ItemSubClassName] IS NOT NULL");

                    b.ToTable("ItemsSubClass");

                    b.HasData(
                        new
                        {
                            IdItemSubClass = 1,
                            ItemSubClassName = "Glock-18"
                        },
                        new
                        {
                            IdItemSubClass = 2,
                            ItemSubClassName = "P2000"
                        },
                        new
                        {
                            IdItemSubClass = 3,
                            ItemSubClassName = "USP-S"
                        },
                        new
                        {
                            IdItemSubClass = 4,
                            ItemSubClassName = "Dual Berettas"
                        },
                        new
                        {
                            IdItemSubClass = 5,
                            ItemSubClassName = "P250"
                        },
                        new
                        {
                            IdItemSubClass = 6,
                            ItemSubClassName = "Tec-9"
                        },
                        new
                        {
                            IdItemSubClass = 7,
                            ItemSubClassName = "Five-SeveN"
                        },
                        new
                        {
                            IdItemSubClass = 8,
                            ItemSubClassName = "CZ75-Auto"
                        },
                        new
                        {
                            IdItemSubClass = 9,
                            ItemSubClassName = "Desert Eagle"
                        },
                        new
                        {
                            IdItemSubClass = 10,
                            ItemSubClassName = "R8 Revolver"
                        },
                        new
                        {
                            IdItemSubClass = 11,
                            ItemSubClassName = "MAC-10"
                        },
                        new
                        {
                            IdItemSubClass = 12,
                            ItemSubClassName = "MP9"
                        },
                        new
                        {
                            IdItemSubClass = 13,
                            ItemSubClassName = "MP7"
                        },
                        new
                        {
                            IdItemSubClass = 14,
                            ItemSubClassName = "MP5-SD"
                        },
                        new
                        {
                            IdItemSubClass = 15,
                            ItemSubClassName = "UMP-45"
                        },
                        new
                        {
                            IdItemSubClass = 16,
                            ItemSubClassName = "P90"
                        },
                        new
                        {
                            IdItemSubClass = 17,
                            ItemSubClassName = "PP-BIZON"
                        },
                        new
                        {
                            IdItemSubClass = 18,
                            ItemSubClassName = "Nova"
                        },
                        new
                        {
                            IdItemSubClass = 19,
                            ItemSubClassName = "XM1014"
                        },
                        new
                        {
                            IdItemSubClass = 20,
                            ItemSubClassName = "MAG-7"
                        },
                        new
                        {
                            IdItemSubClass = 21,
                            ItemSubClassName = "Sawed-Off"
                        },
                        new
                        {
                            IdItemSubClass = 22,
                            ItemSubClassName = "Negev"
                        },
                        new
                        {
                            IdItemSubClass = 23,
                            ItemSubClassName = "M249"
                        },
                        new
                        {
                            IdItemSubClass = 24,
                            ItemSubClassName = "Galil AR"
                        },
                        new
                        {
                            IdItemSubClass = 25,
                            ItemSubClassName = "FAMAS"
                        },
                        new
                        {
                            IdItemSubClass = 26,
                            ItemSubClassName = "AK-47"
                        },
                        new
                        {
                            IdItemSubClass = 27,
                            ItemSubClassName = "M4A1-S"
                        },
                        new
                        {
                            IdItemSubClass = 28,
                            ItemSubClassName = "M4A4"
                        },
                        new
                        {
                            IdItemSubClass = 29,
                            ItemSubClassName = "SG 553"
                        },
                        new
                        {
                            IdItemSubClass = 30,
                            ItemSubClassName = "AUG"
                        },
                        new
                        {
                            IdItemSubClass = 31,
                            ItemSubClassName = "SSG 08"
                        },
                        new
                        {
                            IdItemSubClass = 32,
                            ItemSubClassName = "AWP"
                        },
                        new
                        {
                            IdItemSubClass = 33,
                            ItemSubClassName = "G3SG1"
                        },
                        new
                        {
                            IdItemSubClass = 34,
                            ItemSubClassName = "SCAR-20"
                        },
                        new
                        {
                            IdItemSubClass = 35,
                            ItemSubClassName = "Bayonet"
                        },
                        new
                        {
                            IdItemSubClass = 36,
                            ItemSubClassName = "Bowie"
                        },
                        new
                        {
                            IdItemSubClass = 37,
                            ItemSubClassName = "Butterfly"
                        },
                        new
                        {
                            IdItemSubClass = 38,
                            ItemSubClassName = "Classic"
                        },
                        new
                        {
                            IdItemSubClass = 39,
                            ItemSubClassName = "Falshion"
                        },
                        new
                        {
                            IdItemSubClass = 40,
                            ItemSubClassName = "Flip"
                        },
                        new
                        {
                            IdItemSubClass = 41,
                            ItemSubClassName = "Gut"
                        },
                        new
                        {
                            IdItemSubClass = 42,
                            ItemSubClassName = "Huntsman"
                        },
                        new
                        {
                            IdItemSubClass = 43,
                            ItemSubClassName = "Karambit"
                        },
                        new
                        {
                            IdItemSubClass = 44,
                            ItemSubClassName = "M9"
                        },
                        new
                        {
                            IdItemSubClass = 45,
                            ItemSubClassName = "Navaja"
                        },
                        new
                        {
                            IdItemSubClass = 46,
                            ItemSubClassName = "Nomad"
                        },
                        new
                        {
                            IdItemSubClass = 47,
                            ItemSubClassName = "Paracord"
                        },
                        new
                        {
                            IdItemSubClass = 48,
                            ItemSubClassName = "Shadow Daggers"
                        },
                        new
                        {
                            IdItemSubClass = 49,
                            ItemSubClassName = "Skeleton"
                        },
                        new
                        {
                            IdItemSubClass = 50,
                            ItemSubClassName = "Stiletto"
                        },
                        new
                        {
                            IdItemSubClass = 51,
                            ItemSubClassName = "Survival"
                        },
                        new
                        {
                            IdItemSubClass = 52,
                            ItemSubClassName = "Talon"
                        },
                        new
                        {
                            IdItemSubClass = 53,
                            ItemSubClassName = "Ursus"
                        },
                        new
                        {
                            IdItemSubClass = 54,
                            ItemSubClassName = "Hand Wraps"
                        },
                        new
                        {
                            IdItemSubClass = 55,
                            ItemSubClassName = "Moto"
                        },
                        new
                        {
                            IdItemSubClass = 56,
                            ItemSubClassName = "Specialist"
                        },
                        new
                        {
                            IdItemSubClass = 57,
                            ItemSubClassName = "Sport"
                        },
                        new
                        {
                            IdItemSubClass = 58,
                            ItemSubClassName = "Bloodhound"
                        },
                        new
                        {
                            IdItemSubClass = 59,
                            ItemSubClassName = "Hydra"
                        },
                        new
                        {
                            IdItemSubClass = 60,
                            ItemSubClassName = "Broken Fang"
                        },
                        new
                        {
                            IdItemSubClass = 61,
                            ItemSubClassName = "Driver"
                        },
                        new
                        {
                            IdItemSubClass = 62,
                            ItemSubClassName = "Music Kit"
                        },
                        new
                        {
                            IdItemSubClass = 63,
                            ItemSubClassName = "Case"
                        },
                        new
                        {
                            IdItemSubClass = 64,
                            ItemSubClassName = "Sticker"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.Property<int>("IdItemType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemType"));

                    b.Property<int>("IdItemClass")
                        .HasColumnType("int");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdItemType");

                    b.HasIndex("IdItemClass")
                        .IsUnique();

                    b.ToTable("ItemsType");

                    b.HasData(
                        new
                        {
                            IdItemType = 1,
                            IdItemClass = 1,
                            ItemTypeName = "Lootboxes"
                        },
                        new
                        {
                            IdItemType = 2,
                            IdItemClass = 2,
                            ItemTypeName = "Weapon"
                        },
                        new
                        {
                            IdItemType = 3,
                            IdItemClass = 3,
                            ItemTypeName = "Weapon"
                        },
                        new
                        {
                            IdItemType = 4,
                            IdItemClass = 4,
                            ItemTypeName = "Accessories"
                        },
                        new
                        {
                            IdItemType = 5,
                            IdItemClass = 5,
                            ItemTypeName = "Weapon"
                        },
                        new
                        {
                            IdItemType = 6,
                            IdItemClass = 6,
                            ItemTypeName = "Accessories"
                        },
                        new
                        {
                            IdItemType = 7,
                            IdItemClass = 7,
                            ItemTypeName = "Weapon"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsTypeCharacteristics", b =>
                {
                    b.Property<int>("IdItemType")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeCharacteristic")
                        .HasColumnType("int");

                    b.Property<string>("TypeCharacteristicValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("IdItemType", "IdTypeCharacteristic");

                    b.HasIndex("IdTypeCharacteristic");

                    b.ToTable("ItemsTypeCharacteristics");

                    b.HasData(
                        new
                        {
                            IdItemType = 1,
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicValue = "2023"
                        },
                        new
                        {
                            IdItemType = 1,
                            IdTypeCharacteristic = 2,
                            TypeCharacteristicValue = "Spring"
                        },
                        new
                        {
                            IdItemType = 3,
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicValue = "Yes"
                        },
                        new
                        {
                            IdItemType = 4,
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicValue = "2024"
                        },
                        new
                        {
                            IdItemType = 5,
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicValue = "2022"
                        },
                        new
                        {
                            IdItemType = 5,
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicValue = "Yes"
                        },
                        new
                        {
                            IdItemType = 6,
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicValue = "2019"
                        },
                        new
                        {
                            IdItemType = 6,
                            IdTypeCharacteristic = 2,
                            TypeCharacteristicValue = "Summer"
                        },
                        new
                        {
                            IdItemType = 7,
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicValue = "No"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", b =>
                {
                    b.Property<int>("IdTypeCharacteristic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeCharacteristic"));

                    b.Property<string>("TypeCharacteristicName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdTypeCharacteristic");

                    b.HasIndex("TypeCharacteristicName")
                        .IsUnique()
                        .HasFilter("[TypeCharacteristicName] IS NOT NULL");

                    b.ToTable("TypeCharacteristics");

                    b.HasData(
                        new
                        {
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicName = "Release Year"
                        },
                        new
                        {
                            IdTypeCharacteristic = 2,
                            TypeCharacteristicName = "Release Season"
                        },
                        new
                        {
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicName = "Stat-Track"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Roles", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRole");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRole = 1,
                            RoleName = "Member"
                        },
                        new
                        {
                            IdRole = 2,
                            RoleName = "Developer"
                        },
                        new
                        {
                            IdRole = 3,
                            RoleName = "Administrator"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserProfilePicture")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUserProfilePicture")
                        .IsUnique()
                        .HasFilter("[IdUserProfilePicture] IS NOT NULL");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            Description = "Hi! My name is Arseny Trubilo.",
                            IdRole = 1,
                            IdUserProfilePicture = 1,
                            Login = "arseny",
                            Password = "123",
                            UUID = "510b94169e",
                            Username = "Arseny"
                        },
                        new
                        {
                            IdUser = 2,
                            Description = "Certified Boykisser",
                            IdRole = 1,
                            IdUserProfilePicture = 2,
                            Login = "roma",
                            Password = "123",
                            UUID = "1f66a5c37b",
                            Username = "Romjanee"
                        },
                        new
                        {
                            IdUser = 3,
                            Description = "Мир - картофелина",
                            IdRole = 3,
                            IdUserProfilePicture = 3,
                            Login = "kirill",
                            Password = "123",
                            UUID = "074725b8f0",
                            Username = "Kirim"
                        },
                        new
                        {
                            IdUser = 4,
                            Description = "<h2>HELLO??????</h2>",
                            IdRole = 1,
                            IdUserProfilePicture = 4,
                            Login = "serega",
                            Password = "123",
                            UUID = "c62af965fd",
                            Username = "Серега Рыжий 78рус"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", b =>
                {
                    b.Property<int>("IdUserProfilePicture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserProfilePicture"));

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserProfilePicture");

                    b.ToTable("UsersPictures");

                    b.HasData(
                        new
                        {
                            IdUserProfilePicture = 1,
                            PicturePath = "images\\UsersProfilePictures\\Arseny.jpg"
                        },
                        new
                        {
                            IdUserProfilePicture = 2,
                            PicturePath = "images\\UsersProfilePictures\\Roma.jpg"
                        },
                        new
                        {
                            IdUserProfilePicture = 3,
                            PicturePath = "images\\UsersProfilePictures\\Kirill.jpg"
                        },
                        new
                        {
                            IdUserProfilePicture = 4,
                            PicturePath = "images\\UsersProfilePictures\\Serega.jpg"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealOffers", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.DealsModels.Deals", "Deal")
                        .WithMany("DealOffers")
                        .HasForeignKey("IdDeal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Offerer")
                        .WithMany("DealOffers")
                        .HasForeignKey("IdOfferer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Offerer");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "Item")
                        .WithMany("Deals")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "User")
                        .WithMany("Deals")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealsHistory", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Buyer")
                        .WithMany("BuyingHistory")
                        .HasForeignKey("IdBuyer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "Item")
                        .WithMany("DealsHistory")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Seller")
                        .WithMany("SellingHistory")
                        .HasForeignKey("IdSeller")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Item");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", "ItemsSubClass")
                        .WithMany("ItemsClasses")
                        .HasForeignKey("IdItemSubClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsSubClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClassCharacteristics", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", "ClassCharacteristic")
                        .WithMany("ItemsClassCharacteristics")
                        .HasForeignKey("IdClassCharacteristic")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", "ItemClass")
                        .WithMany("ItemsClassCharacteristics")
                        .HasForeignKey("IdItemClass")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClassCharacteristic");

                    b.Navigation("ItemClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", "ItemPicture")
                        .WithOne("Item")
                        .HasForeignKey("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "IdItemPicture")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", "ItemsType")
                        .WithMany("Items")
                        .HasForeignKey("IdItemType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", "Skin")
                        .WithMany("Items")
                        .HasForeignKey("IdSkin")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemPicture");

                    b.Navigation("ItemsType");

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", "ItemsClass")
                        .WithMany("ItemsTypes")
                        .HasForeignKey("IdItemClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsTypeCharacteristics", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", "ItemType")
                        .WithMany("ItemsTypeCharacteristics")
                        .HasForeignKey("IdItemType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", "TypeCharacteristic")
                        .WithMany("ItemsTypeCharacteristics")
                        .HasForeignKey("IdTypeCharacteristic")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemType");

                    b.Navigation("TypeCharacteristic");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", "UserProfilePicture")
                        .WithOne("User")
                        .HasForeignKey("CSMarketApp.Domain.Core.Models.UsersModels.Users", "IdUserProfilePicture")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Role");

                    b.Navigation("UserProfilePicture");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.Navigation("DealOffers");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", b =>
                {
                    b.Navigation("ItemsClassCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.Navigation("ItemsClassCharacteristics");

                    b.Navigation("ItemsTypes");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.Navigation("Deals");

                    b.Navigation("DealsHistory");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", b =>
                {
                    b.Navigation("ItemsClasses");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("ItemsTypeCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", b =>
                {
                    b.Navigation("ItemsTypeCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.Navigation("BuyingHistory");

                    b.Navigation("DealOffers");

                    b.Navigation("Deals");

                    b.Navigation("SellingHistory");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
