// <auto-generated />
using System;
using CSMarketApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSMarketApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealOffers", b =>
                {
                    b.Property<int>("IdDealOffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDealOffer"));

                    b.Property<int>("IdDeal")
                        .HasColumnType("int");

                    b.Property<int>("IdOfferer")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDealOffer");

                    b.HasIndex("IdDeal");

                    b.HasIndex("IdOfferer");

                    b.ToTable("DealOffers");

                    b.HasData(
                        new
                        {
                            IdDealOffer = 1,
                            IdDeal = 1,
                            IdOfferer = 2,
                            OfferPrice = 14.50m
                        },
                        new
                        {
                            IdDealOffer = 2,
                            IdDeal = 2,
                            IdOfferer = 3,
                            OfferPrice = 13.15m
                        },
                        new
                        {
                            IdDealOffer = 3,
                            IdDeal = 3,
                            IdOfferer = 4,
                            OfferPrice = 50.00m
                        },
                        new
                        {
                            IdDealOffer = 4,
                            IdDeal = 3,
                            IdOfferer = 1,
                            OfferPrice = 90.56m
                        },
                        new
                        {
                            IdDealOffer = 5,
                            IdDeal = 4,
                            IdOfferer = 1,
                            OfferPrice = 1.11m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.Property<int>("IdDeal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDeal"));

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDeal");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdUser");

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            IdDeal = 1,
                            IdItem = 1,
                            IdUser = 1,
                            Price = 5.00m
                        },
                        new
                        {
                            IdDeal = 2,
                            IdItem = 2,
                            IdUser = 2,
                            Price = 123.00m
                        },
                        new
                        {
                            IdDeal = 3,
                            IdItem = 3,
                            IdUser = 3,
                            Price = 123.00m
                        },
                        new
                        {
                            IdDeal = 4,
                            IdItem = 4,
                            IdUser = 4,
                            Price = 77.00m
                        },
                        new
                        {
                            IdDeal = 5,
                            IdItem = 1,
                            IdUser = 2,
                            Price = 567.00m
                        },
                        new
                        {
                            IdDeal = 6,
                            IdItem = 2,
                            IdUser = 3,
                            Price = 134.00m
                        },
                        new
                        {
                            IdDeal = 7,
                            IdItem = 3,
                            IdUser = 1,
                            Price = 15.00m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealsHistory", b =>
                {
                    b.Property<int>("IdDealsHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDealsHistory"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBuyer")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("IdSeller")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.HasKey("IdDealsHistory");

                    b.HasIndex("IdBuyer");

                    b.HasIndex("IdItem");

                    b.HasIndex("IdSeller");

                    b.ToTable("DealsHistory");

                    b.HasData(
                        new
                        {
                            IdDealsHistory = 1,
                            Date = new DateTime(2024, 3, 14, 10, 24, 40, 691, DateTimeKind.Local).AddTicks(2565),
                            IdBuyer = 1,
                            IdItem = 1,
                            IdSeller = 2,
                            Price = 12.45m
                        },
                        new
                        {
                            IdDealsHistory = 2,
                            Date = new DateTime(2024, 3, 14, 10, 24, 40, 691, DateTimeKind.Local).AddTicks(2580),
                            IdBuyer = 2,
                            IdItem = 1,
                            IdSeller = 4,
                            Price = 11.90m
                        },
                        new
                        {
                            IdDealsHistory = 3,
                            Date = new DateTime(2024, 3, 14, 10, 24, 40, 691, DateTimeKind.Local).AddTicks(2582),
                            IdBuyer = 3,
                            IdItem = 3,
                            IdSeller = 1,
                            Price = 67.12m
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", b =>
                {
                    b.Property<int>("IdClassCharacteristic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClassCharacteristic"));

                    b.Property<string>("ClassCharacteristicName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdClassCharacteristic");

                    b.HasIndex("ClassCharacteristicName")
                        .IsUnique()
                        .HasFilter("[ClassCharacteristicName] IS NOT NULL");

                    b.ToTable("ClassCharacteristics");

                    b.HasData(
                        new
                        {
                            IdClassCharacteristic = 1,
                            ClassCharacteristicName = "Fire Range"
                        },
                        new
                        {
                            IdClassCharacteristic = 2,
                            ClassCharacteristicName = "Optical Scope"
                        },
                        new
                        {
                            IdClassCharacteristic = 3,
                            ClassCharacteristicName = "Magazine Capacity"
                        },
                        new
                        {
                            IdClassCharacteristic = 4,
                            ClassCharacteristicName = "Fire Rate"
                        },
                        new
                        {
                            IdClassCharacteristic = 5,
                            ClassCharacteristicName = "Blade Lenght"
                        },
                        new
                        {
                            IdClassCharacteristic = 6,
                            ClassCharacteristicName = "Material"
                        },
                        new
                        {
                            IdClassCharacteristic = 7,
                            ClassCharacteristicName = "Patch Place"
                        },
                        new
                        {
                            IdClassCharacteristic = 8,
                            ClassCharacteristicName = "Agent Game Side"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.Property<int>("IdItemClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemClass"));

                    b.Property<int>("IdItemSubClass")
                        .HasColumnType("int");

                    b.Property<string>("ItemClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdItemClass");

                    b.HasIndex("IdItemSubClass")
                        .IsUnique();

                    b.ToTable("ItemsClass");

                    b.HasData(
                        new
                        {
                            IdItemClass = 1,
                            IdItemSubClass = 1,
                            ItemClassName = "Pistol"
                        },
                        new
                        {
                            IdItemClass = 2,
                            IdItemSubClass = 32,
                            ItemClassName = "Rifle"
                        },
                        new
                        {
                            IdItemClass = 3,
                            IdItemSubClass = 59,
                            ItemClassName = "Gloves"
                        },
                        new
                        {
                            IdItemClass = 4,
                            IdItemSubClass = 44,
                            ItemClassName = "Knife"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClassCharacteristics", b =>
                {
                    b.Property<int>("IdItemClass")
                        .HasColumnType("int");

                    b.Property<int>("IdClassCharacteristic")
                        .HasColumnType("int");

                    b.Property<string>("ClassCharacteristicValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("IdItemClass", "IdClassCharacteristic");

                    b.HasIndex("IdClassCharacteristic");

                    b.ToTable("ItemsClassCharacteristics");

                    b.HasData(
                        new
                        {
                            IdItemClass = 1,
                            IdClassCharacteristic = 1,
                            ClassCharacteristicValue = "1800m"
                        },
                        new
                        {
                            IdItemClass = 2,
                            IdClassCharacteristic = 3,
                            ClassCharacteristicValue = "24 bullets"
                        },
                        new
                        {
                            IdItemClass = 3,
                            IdClassCharacteristic = 6,
                            ClassCharacteristicValue = "Leather"
                        },
                        new
                        {
                            IdItemClass = 4,
                            IdClassCharacteristic = 5,
                            ClassCharacteristicValue = "9cm"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int?>("IdItemPicture")
                        .HasColumnType("int");

                    b.Property<int>("IdItemType")
                        .HasColumnType("int");

                    b.Property<int>("IdSkin")
                        .HasColumnType("int");

                    b.Property<int?>("Rarity")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("IdItem");

                    b.HasIndex("IdItemPicture")
                        .IsUnique()
                        .HasFilter("[IdItemPicture] IS NOT NULL");

                    b.HasIndex("IdItemType");

                    b.HasIndex("IdSkin");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            IdItem = 1,
                            IdItemPicture = 1,
                            IdItemType = 3,
                            IdSkin = 1,
                            Rarity = 1
                        },
                        new
                        {
                            IdItem = 2,
                            IdItemPicture = 2,
                            IdItemType = 2,
                            IdSkin = 2,
                            Rarity = 3
                        },
                        new
                        {
                            IdItem = 3,
                            IdItemPicture = 3,
                            IdItemType = 4,
                            IdSkin = 3,
                            Rarity = 2
                        },
                        new
                        {
                            IdItem = 4,
                            IdItemPicture = 4,
                            IdItemType = 1,
                            IdSkin = 4,
                            Rarity = 4
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", b =>
                {
                    b.Property<int>("IdItemPicture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemPicture"));

                    b.Property<string>("ItemPicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdItemPicture");

                    b.HasIndex("ItemPicturePath")
                        .IsUnique();

                    b.ToTable("ItemsPictures");

                    b.HasData(
                        new
                        {
                            IdItemPicture = 1,
                            ItemPicturePath = "images\\ItemsPictures\\case.png"
                        },
                        new
                        {
                            IdItemPicture = 2,
                            ItemPicturePath = "images\\ItemsPictures\\DesertEagle.png"
                        },
                        new
                        {
                            IdItemPicture = 3,
                            ItemPicturePath = "images\\ItemsPictures\\M4A1-S.png"
                        },
                        new
                        {
                            IdItemPicture = 4,
                            ItemPicturePath = "images\\ItemsPictures\\MusicKit.png"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", b =>
                {
                    b.Property<int>("IdSkin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSkin"));

                    b.Property<string>("SkinName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSkin");

                    b.HasIndex("SkinName")
                        .IsUnique();

                    b.ToTable("Skins");

                    b.HasData(
                        new
                        {
                            IdSkin = 1,
                            SkinName = "2021 IEM Stockgholm Mirage"
                        },
                        new
                        {
                            IdSkin = 2,
                            SkinName = "Marble Fade"
                        },
                        new
                        {
                            IdSkin = 3,
                            SkinName = "Aziimov"
                        },
                        new
                        {
                            IdSkin = 4,
                            SkinName = "Natus Vincere RMR 2022"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", b =>
                {
                    b.Property<int>("IdItemSubClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemSubClass"));

                    b.Property<string>("ItemSubClassName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdItemSubClass");

                    b.HasIndex("ItemSubClassName")
                        .IsUnique()
                        .HasFilter("[ItemSubClassName] IS NOT NULL");

                    b.ToTable("ItemsSubClass");

                    b.HasData(
                        new
                        {
                            IdItemSubClass = 1,
                            ItemSubClassName = "Glock-18"
                        },
                        new
                        {
                            IdItemSubClass = 2,
                            ItemSubClassName = "P2000"
                        },
                        new
                        {
                            IdItemSubClass = 3,
                            ItemSubClassName = "USP-S"
                        },
                        new
                        {
                            IdItemSubClass = 4,
                            ItemSubClassName = "Dual Berettas"
                        },
                        new
                        {
                            IdItemSubClass = 5,
                            ItemSubClassName = "P250"
                        },
                        new
                        {
                            IdItemSubClass = 6,
                            ItemSubClassName = "Tec-9"
                        },
                        new
                        {
                            IdItemSubClass = 7,
                            ItemSubClassName = "Five-SeveN"
                        },
                        new
                        {
                            IdItemSubClass = 8,
                            ItemSubClassName = "CZ75-Auto"
                        },
                        new
                        {
                            IdItemSubClass = 9,
                            ItemSubClassName = "Desert Eagle"
                        },
                        new
                        {
                            IdItemSubClass = 10,
                            ItemSubClassName = "R8 Revolver"
                        },
                        new
                        {
                            IdItemSubClass = 11,
                            ItemSubClassName = "MAC-10"
                        },
                        new
                        {
                            IdItemSubClass = 12,
                            ItemSubClassName = "MP9"
                        },
                        new
                        {
                            IdItemSubClass = 13,
                            ItemSubClassName = "MP7"
                        },
                        new
                        {
                            IdItemSubClass = 14,
                            ItemSubClassName = "MP5-SD"
                        },
                        new
                        {
                            IdItemSubClass = 15,
                            ItemSubClassName = "UMP-45"
                        },
                        new
                        {
                            IdItemSubClass = 16,
                            ItemSubClassName = "P90"
                        },
                        new
                        {
                            IdItemSubClass = 17,
                            ItemSubClassName = "PP-BIZON"
                        },
                        new
                        {
                            IdItemSubClass = 18,
                            ItemSubClassName = "Nova"
                        },
                        new
                        {
                            IdItemSubClass = 19,
                            ItemSubClassName = "XM1014"
                        },
                        new
                        {
                            IdItemSubClass = 20,
                            ItemSubClassName = "MAG-7"
                        },
                        new
                        {
                            IdItemSubClass = 21,
                            ItemSubClassName = "Sawed-Off"
                        },
                        new
                        {
                            IdItemSubClass = 22,
                            ItemSubClassName = "Negev"
                        },
                        new
                        {
                            IdItemSubClass = 23,
                            ItemSubClassName = "M249"
                        },
                        new
                        {
                            IdItemSubClass = 24,
                            ItemSubClassName = "Galil AR"
                        },
                        new
                        {
                            IdItemSubClass = 25,
                            ItemSubClassName = "FAMAS"
                        },
                        new
                        {
                            IdItemSubClass = 26,
                            ItemSubClassName = "AK-47"
                        },
                        new
                        {
                            IdItemSubClass = 27,
                            ItemSubClassName = "M4A1-S"
                        },
                        new
                        {
                            IdItemSubClass = 28,
                            ItemSubClassName = "M4A4"
                        },
                        new
                        {
                            IdItemSubClass = 29,
                            ItemSubClassName = "SG 553"
                        },
                        new
                        {
                            IdItemSubClass = 30,
                            ItemSubClassName = "AUG"
                        },
                        new
                        {
                            IdItemSubClass = 31,
                            ItemSubClassName = "SSG 08"
                        },
                        new
                        {
                            IdItemSubClass = 32,
                            ItemSubClassName = "AWP"
                        },
                        new
                        {
                            IdItemSubClass = 33,
                            ItemSubClassName = "G3SG1"
                        },
                        new
                        {
                            IdItemSubClass = 34,
                            ItemSubClassName = "SCAR-20"
                        },
                        new
                        {
                            IdItemSubClass = 35,
                            ItemSubClassName = "Bayonet"
                        },
                        new
                        {
                            IdItemSubClass = 36,
                            ItemSubClassName = "Bowie"
                        },
                        new
                        {
                            IdItemSubClass = 37,
                            ItemSubClassName = "Butterfly"
                        },
                        new
                        {
                            IdItemSubClass = 38,
                            ItemSubClassName = "Classic"
                        },
                        new
                        {
                            IdItemSubClass = 39,
                            ItemSubClassName = "Falchion"
                        },
                        new
                        {
                            IdItemSubClass = 40,
                            ItemSubClassName = "Flip"
                        },
                        new
                        {
                            IdItemSubClass = 41,
                            ItemSubClassName = "Gut"
                        },
                        new
                        {
                            IdItemSubClass = 42,
                            ItemSubClassName = "Huntsman"
                        },
                        new
                        {
                            IdItemSubClass = 43,
                            ItemSubClassName = "Karambit"
                        },
                        new
                        {
                            IdItemSubClass = 44,
                            ItemSubClassName = "M9"
                        },
                        new
                        {
                            IdItemSubClass = 45,
                            ItemSubClassName = "Navaja"
                        },
                        new
                        {
                            IdItemSubClass = 46,
                            ItemSubClassName = "Nomad"
                        },
                        new
                        {
                            IdItemSubClass = 47,
                            ItemSubClassName = "Paracord"
                        },
                        new
                        {
                            IdItemSubClass = 48,
                            ItemSubClassName = "Shadow Daggers"
                        },
                        new
                        {
                            IdItemSubClass = 49,
                            ItemSubClassName = "Skeleton"
                        },
                        new
                        {
                            IdItemSubClass = 50,
                            ItemSubClassName = "Stiletto"
                        },
                        new
                        {
                            IdItemSubClass = 51,
                            ItemSubClassName = "Survival"
                        },
                        new
                        {
                            IdItemSubClass = 52,
                            ItemSubClassName = "Talon"
                        },
                        new
                        {
                            IdItemSubClass = 53,
                            ItemSubClassName = "Ursus"
                        },
                        new
                        {
                            IdItemSubClass = 54,
                            ItemSubClassName = "Hand Wraps"
                        },
                        new
                        {
                            IdItemSubClass = 55,
                            ItemSubClassName = "Moto"
                        },
                        new
                        {
                            IdItemSubClass = 56,
                            ItemSubClassName = "Specialist"
                        },
                        new
                        {
                            IdItemSubClass = 57,
                            ItemSubClassName = "Sport"
                        },
                        new
                        {
                            IdItemSubClass = 58,
                            ItemSubClassName = "Bloodhound"
                        },
                        new
                        {
                            IdItemSubClass = 59,
                            ItemSubClassName = "Hydra"
                        },
                        new
                        {
                            IdItemSubClass = 60,
                            ItemSubClassName = "Broken Fang"
                        },
                        new
                        {
                            IdItemSubClass = 61,
                            ItemSubClassName = "Driver"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.Property<int>("IdItemType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemType"));

                    b.Property<int>("IdItemClass")
                        .HasColumnType("int");

                    b.Property<string>("ItemTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdItemType");

                    b.HasIndex("IdItemClass")
                        .IsUnique();

                    b.ToTable("ItemsType");

                    b.HasData(
                        new
                        {
                            IdItemType = 1,
                            IdItemClass = 2,
                            ItemTypeName = "Weapon"
                        },
                        new
                        {
                            IdItemType = 2,
                            IdItemClass = 4,
                            ItemTypeName = "Accessories"
                        },
                        new
                        {
                            IdItemType = 3,
                            IdItemClass = 3,
                            ItemTypeName = "Lootboxes"
                        },
                        new
                        {
                            IdItemType = 4,
                            IdItemClass = 1,
                            ItemTypeName = "Weapon"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsTypeCharacteristics", b =>
                {
                    b.Property<int>("IdItemType")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeCharacteristic")
                        .HasColumnType("int");

                    b.Property<string>("TypeCharacteristicValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.HasKey("IdItemType", "IdTypeCharacteristic");

                    b.HasIndex("IdTypeCharacteristic");

                    b.ToTable("ItemsTypeCharacteristics");

                    b.HasData(
                        new
                        {
                            IdItemType = 1,
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicValue = "2022"
                        },
                        new
                        {
                            IdItemType = 1,
                            IdTypeCharacteristic = 2,
                            TypeCharacteristicValue = "Yes"
                        },
                        new
                        {
                            IdItemType = 4,
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicValue = "Spring"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", b =>
                {
                    b.Property<int>("IdTypeCharacteristic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeCharacteristic"));

                    b.Property<string>("TypeCharacteristicName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdTypeCharacteristic");

                    b.HasIndex("TypeCharacteristicName")
                        .IsUnique()
                        .HasFilter("[TypeCharacteristicName] IS NOT NULL");

                    b.ToTable("TypeCharacteristics");

                    b.HasData(
                        new
                        {
                            IdTypeCharacteristic = 1,
                            TypeCharacteristicName = "Release Year"
                        },
                        new
                        {
                            IdTypeCharacteristic = 2,
                            TypeCharacteristicName = "Stattrack"
                        },
                        new
                        {
                            IdTypeCharacteristic = 3,
                            TypeCharacteristicName = "Release Season"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Roles", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRole");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRole = 1,
                            RoleName = "Member"
                        },
                        new
                        {
                            IdRole = 2,
                            RoleName = "Developer"
                        },
                        new
                        {
                            IdRole = 3,
                            RoleName = "Administrator"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(190)
                        .HasColumnType("nvarchar(190)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserProfilePicture")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UUID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUserProfilePicture")
                        .IsUnique()
                        .HasFilter("[IdUserProfilePicture] IS NOT NULL");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            Description = "zxc",
                            IdRole = 1,
                            Login = "zxc",
                            Password = "zxc",
                            UUID = "1",
                            Username = "zxc"
                        },
                        new
                        {
                            IdUser = 2,
                            Description = "asd",
                            IdRole = 1,
                            Login = "asd",
                            Password = "asd",
                            UUID = "2",
                            Username = "asd"
                        },
                        new
                        {
                            IdUser = 3,
                            Description = "qwe",
                            IdRole = 2,
                            Login = "qwe",
                            Password = "qwe",
                            UUID = "3",
                            Username = "qwe"
                        },
                        new
                        {
                            IdUser = 4,
                            Description = "123",
                            IdRole = 1,
                            Login = "123",
                            Password = "123",
                            UUID = "4",
                            Username = "123"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", b =>
                {
                    b.Property<int>("IdUserProfilePicture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUserProfilePicture"));

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUserProfilePicture");

                    b.ToTable("UsersPictures");

                    b.HasData(
                        new
                        {
                            IdUserProfilePicture = 1,
                            PicturePath = "images\\UsersProfilePictures\\1a2418ab-8adf-4015-9303-6b9dfbd34570.jpg"
                        },
                        new
                        {
                            IdUserProfilePicture = 2,
                            PicturePath = "images\\UsersProfilePictures\\a53255aa-32f7-45d6-b403-cf3a51976641.jpg"
                        });
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealOffers", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.DealsModels.Deals", "Deal")
                        .WithMany("DealOffers")
                        .HasForeignKey("IdDeal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Offerer")
                        .WithMany("DealOffers")
                        .HasForeignKey("IdOfferer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Offerer");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "Item")
                        .WithMany("Deals")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "User")
                        .WithMany("Deals")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.DealsHistory", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Buyer")
                        .WithMany("BuyingHistory")
                        .HasForeignKey("IdBuyer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "Item")
                        .WithMany("DealsHistory")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Users", "Seller")
                        .WithMany("SellingHistory")
                        .HasForeignKey("IdSeller")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Item");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", "ItemsSubClass")
                        .WithMany("ItemsClasses")
                        .HasForeignKey("IdItemSubClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsSubClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClassCharacteristics", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", "ClassCharacteristic")
                        .WithMany("ItemsClassCharacteristics")
                        .HasForeignKey("IdClassCharacteristic")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", "ItemClass")
                        .WithMany("ItemsClassCharacteristics")
                        .HasForeignKey("IdItemClass")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClassCharacteristic");

                    b.Navigation("ItemClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", "ItemPicture")
                        .WithOne("Item")
                        .HasForeignKey("CSMarketApp.Domain.Core.Models.ItemsModels.Items", "IdItemPicture")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", "ItemsType")
                        .WithMany("Items")
                        .HasForeignKey("IdItemType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", "Skin")
                        .WithMany("Items")
                        .HasForeignKey("IdSkin")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemPicture");

                    b.Navigation("ItemsType");

                    b.Navigation("Skin");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", "ItemsClass")
                        .WithMany("ItemsTypes")
                        .HasForeignKey("IdItemClass")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemsClass");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsTypeCharacteristics", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", "ItemType")
                        .WithMany("ItemsTypeCharacteristics")
                        .HasForeignKey("IdItemType")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", "TypeCharacteristic")
                        .WithMany("ItemsTypeCharacteristics")
                        .HasForeignKey("IdTypeCharacteristic")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ItemType");

                    b.Navigation("TypeCharacteristic");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", "UserProfilePicture")
                        .WithOne("User")
                        .HasForeignKey("CSMarketApp.Domain.Core.Models.UsersModels.Users", "IdUserProfilePicture")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Role");

                    b.Navigation("UserProfilePicture");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.DealsModels.Deals", b =>
                {
                    b.Navigation("DealOffers");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ClassCharacteristics", b =>
                {
                    b.Navigation("ItemsClassCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Class.ItemsClass", b =>
                {
                    b.Navigation("ItemsClassCharacteristics");

                    b.Navigation("ItemsTypes");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Items", b =>
                {
                    b.Navigation("Deals");

                    b.Navigation("DealsHistory");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.ItemsPictures", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Skins", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.SubClass.ItemsSubClass", b =>
                {
                    b.Navigation("ItemsClasses");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.ItemsType", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("ItemsTypeCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.ItemsModels.Type.TypeCharacteristics", b =>
                {
                    b.Navigation("ItemsTypeCharacteristics");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.Users", b =>
                {
                    b.Navigation("BuyingHistory");

                    b.Navigation("DealOffers");

                    b.Navigation("Deals");

                    b.Navigation("SellingHistory");
                });

            modelBuilder.Entity("CSMarketApp.Domain.Core.Models.UsersModels.UsersPictures", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
